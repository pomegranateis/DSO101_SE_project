version: '3.4'

services:
  database:
    image: postgres:12-alpine
    restart: always
    environment:
      POSTGRES_DB: db
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: psswd
    volumes:
      - database-data:/data/postgres
    ports:
      - "2345:5432"
    expose:
      - "2345"

  backend:
    depends_on:
      - database
    restart: unless-stopped
    build:
      context: ../backend/
      dockerfile: Dockerfile.dev
    working_dir: /app
    environment:
      DATABASE_HOST: database
      DATABASE_NAME: db
      DATABASE_USER: admin
      DATABASE_PASSWORD: psswd
      DATABASE_PORT: 5432
      NODE_ENV: development
      JWT_SECRET: 87e3459aec28ec448228d4f990e80f14657daefc7f01a7146e1149663b30719d
      REFRESH_JWT_SECRET: 6c2723ab022250723988e5cf38e90908be10e82ee2ce802747d279f4dd7bc823
    volumes:
      - "../backend:/app"
    ports:
      - "3000:3000"
    command: "npm run develop"

  test-backend:
    build:
      context: ../backend/
      dockerfile: Dockerfile.dev
    working_dir: /app
    depends_on:
      - database
    environment:
      DATABASE_HOST: database
      DATABASE_NAME: db
      DATABASE_USER: admin
      DATABASE_PASSWORD: psswd
      DATABASE_PORT: 5432
      NODE_ENV: test
    command: "npm test"
    volumes:
      - "../backend:/app"

  frontend:
    depends_on:
      - backend
    restart: unless-stopped
    build:
      context: ../frontend/
      dockerfile: Dockerfile.dev
    working_dir: /app
    environment:
      NODE_ENV: development
    volumes:
      - "../frontend:/app"
    ports:
      - "3010:3010"
    command: "npm run develop"

volumes:
  database-data:
  backend-uploads:
